//
// Generated file, do not edit! Created by opp_msgc 4.2 from src/base/messages/Collision.msg.
//

#ifndef _COLLISION_M_H_
#define _COLLISION_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0402
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include "../base/Manager.h"
	#include "../base/Particle.h"

	typedef Manager *ManagerPtr;
	typedef Particle *ParticlePtr;
// }}



/**
 * Class generated from <tt>src/base/messages/Collision.msg</tt> by opp_msgc.
 * <pre>
 * message CollisionMessage {
 * 
 * 	double collisionTime;
 * 
 * 	double x; 	
 * 	double y; 	
 * 	double z; 	
 * 
 * 	double vx; 	
 * 	double vy;	
 * 	double vz;	
 * 
 * 	ManagerPtr manager;
 * 
 * 	ParticlePtr partner;
 * 	ParticlePtr prevPartner;
 * 
 * }
 * </pre>
 */
class CollisionMessage : public ::cMessage
{
  protected:
    double collisionTime_var;
    double x_var;
    double y_var;
    double z_var;
    double vx_var;
    double vy_var;
    double vz_var;
    ManagerPtr manager_var;
    ParticlePtr partner_var;
    ParticlePtr prevPartner_var;

  private:
    void copy(const CollisionMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const CollisionMessage&);

  public:
    CollisionMessage(const char *name=NULL, int kind=0);
    CollisionMessage(const CollisionMessage& other);
    virtual ~CollisionMessage();
    CollisionMessage& operator=(const CollisionMessage& other);
    virtual CollisionMessage *dup() const {return new CollisionMessage(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual double getCollisionTime() const;
    virtual void setCollisionTime(double collisionTime);
    virtual double getX() const;
    virtual void setX(double x);
    virtual double getY() const;
    virtual void setY(double y);
    virtual double getZ() const;
    virtual void setZ(double z);
    virtual double getVx() const;
    virtual void setVx(double vx);
    virtual double getVy() const;
    virtual void setVy(double vy);
    virtual double getVz() const;
    virtual void setVz(double vz);
    virtual ManagerPtr& getManager();
    virtual const ManagerPtr& getManager() const {return const_cast<CollisionMessage*>(this)->getManager();}
    virtual void setManager(const ManagerPtr& manager);
    virtual ParticlePtr& getPartner();
    virtual const ParticlePtr& getPartner() const {return const_cast<CollisionMessage*>(this)->getPartner();}
    virtual void setPartner(const ParticlePtr& partner);
    virtual ParticlePtr& getPrevPartner();
    virtual const ParticlePtr& getPrevPartner() const {return const_cast<CollisionMessage*>(this)->getPrevPartner();}
    virtual void setPrevPartner(const ParticlePtr& prevPartner);
};

inline void doPacking(cCommBuffer *b, CollisionMessage& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, CollisionMessage& obj) {obj.parsimUnpack(b);}


#endif // _COLLISION_M_H_
