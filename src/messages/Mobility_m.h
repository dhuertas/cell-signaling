//
// Generated file, do not edit! Created by opp_msgc 4.2 from Mobility.msg.
//

#ifndef _MOBILITY_M_H_
#define _MOBILITY_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0402
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include "../base/Particle.h"
	typedef Particle *ParticlePtr;
// }}



/**
 * Class generated from <tt>Mobility.msg</tt> by opp_msgc.
 * <pre>
 * message MobilityMessage {
 * 
 * 	int eventType;
 * 	int prevSpaceCell;
 * 	int nextSpaceCell;
 * 
 * 	double eventTime;
 * 
 * 	double x;
 * 	double y;
 * 	double z;
 * 	double vx;
 * 	double vy;
 * 	double vz;
 * 
 * 	ParticlePtr partner;
 * 
 * }
 * </pre>
 */
class MobilityMessage : public ::cMessage
{
  protected:
    int eventType_var;
    int prevSpaceCell_var;
    int nextSpaceCell_var;
    double eventTime_var;
    double x_var;
    double y_var;
    double z_var;
    double vx_var;
    double vy_var;
    double vz_var;
    ParticlePtr partner_var;

  private:
    void copy(const MobilityMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const MobilityMessage&);

  public:
    MobilityMessage(const char *name=NULL, int kind=0);
    MobilityMessage(const MobilityMessage& other);
    virtual ~MobilityMessage();
    MobilityMessage& operator=(const MobilityMessage& other);
    virtual MobilityMessage *dup() const {return new MobilityMessage(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getEventType() const;
    virtual void setEventType(int eventType);
    virtual int getPrevSpaceCell() const;
    virtual void setPrevSpaceCell(int prevSpaceCell);
    virtual int getNextSpaceCell() const;
    virtual void setNextSpaceCell(int nextSpaceCell);
    virtual double getEventTime() const;
    virtual void setEventTime(double eventTime);
    virtual double getX() const;
    virtual void setX(double x);
    virtual double getY() const;
    virtual void setY(double y);
    virtual double getZ() const;
    virtual void setZ(double z);
    virtual double getVx() const;
    virtual void setVx(double vx);
    virtual double getVy() const;
    virtual void setVy(double vy);
    virtual double getVz() const;
    virtual void setVz(double vz);
    virtual ParticlePtr& getPartner();
    virtual const ParticlePtr& getPartner() const {return const_cast<MobilityMessage*>(this)->getPartner();}
    virtual void setPartner(const ParticlePtr& partner);
};

inline void doPacking(cCommBuffer *b, MobilityMessage& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, MobilityMessage& obj) {obj.parsimUnpack(b);}


#endif // _MOBILITY_M_H_
